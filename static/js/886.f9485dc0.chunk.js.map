{"version":3,"file":"static/js/886.f9485dc0.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginFormShema.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import { theme } from 'constants/theme';\nimport styled from 'styled-components';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 77px 84px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.222;\n  letter-spacing: -0.16px;\n  color: ${theme.colors.black};\n  margin-bottom: 32px;\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    border: 1px solid\n      ${props =>\n        props.hasError\n          ? theme.colors.red\n          : props.hasSuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color 0.3s;\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const ErrorIcon = styled.span`\n  position: absolute;\n  top: 15px;\n  right: ${props => (props.errorIconRight ? '50px' : '16px')};\n  font-size: 22px;\n  font-size: ${theme.fontWeight.bold};\n  color: ${theme.colors.red};\n  display: ${props => (props.hasError ? 'block' : 'none')};\n`;\n\nexport const EyeIconInvisible = styled(AiOutlineEyeInvisible)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const EyeIconVisible = styled(AiOutlineEye)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: inline-block;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport const SuccessIcon = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 50px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${theme.colors.accent};\n  transition: color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.beige};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.428;\n  letter-spacing: -0.42px;\n  color: ${theme.colors.mediumGrey};\n`;\n","import * as yup from 'yup';\n\nconst regEx = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nexport const LoginFormSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(regEx, { message: 'Please enter a valid email' })\n    .required('Email is required'),\n  password: yup.string().min(7).required('Required'),\n});\n","import { Title } from 'components/Title/Title';\nimport {\n  ButtonWrapper,\n  ErrorIcon,\n  ErrorText,\n  EyeIconInvisible,\n  EyeIconVisible,\n  FormWrapper,\n  InputWrapper,\n  Link,\n  LinkWrapper,\n  SuccessIcon,\n  SuccessMessage,\n  Text,\n  TitleWrapper,\n  Wrapper,\n} from './LoginForm.styled';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { LoginFormSchema } from './LoginFormShema.styled';\nimport { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperation';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  const handleTogglePassword = () => {\n    setIsPasswordVisible(prevState => !prevState);\n  };\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title name={'Log in'} />\n      </TitleWrapper>\n      <Text>\n        Welcome! Please enter your credentials to login to the platform:\n      </Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={LoginFormSchema}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <form>\n            <FormWrapper>\n              <InputWrapper hasError={touched.email && errors.email}>\n                <label>\n                  <Field type=\"email\" name=\"email\" placeholder=\" Email\" />\n                  <ErrorIcon hasError={touched.email && errors.email}>\n                    ✕\n                  </ErrorIcon>\n                  <ErrorMessage name=\"email\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper\n                hasError={touched.password && errors.password}\n                hasSuccess={touched.password && !errors.password}\n              >\n                <label>\n                  <Field\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\" Password\"\n                  />\n                  {isPasswordVisible ? (\n                    <EyeIconVisible onClick={handleTogglePassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleTogglePassword} />\n                  )}\n                  <ErrorIcon\n                    hasError={touched.password && errors.password}\n                    errorIconRight={true}\n                  >\n                    ✕\n                  </ErrorIcon>\n                  {touched.password && !errors.password && (\n                    <SuccessMessage>Password is secure</SuccessMessage>\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessIcon>\n                      <use href={sprite + '#icon-check'}></use>\n                    </SuccessIcon>\n                  )}\n                  <ErrorMessage name=\"password\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button\n                // padding={'16px 186px'}\n                width={'424px'}\n                text={'LOG IN'}\n                type={'submit'}\n                handleClick={handleSubmit}\n              />\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n      <LinkWrapper>\n        <p>Don’t have an account?</p>\n        <Link to=\"/register\">Register</Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n","import { Container } from 'components/Container/Container';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { PetBlock } from 'components/PetBlock/PetBlock';\nimport { Wrapper } from './Login.styled';\nimport loginImg from '../../images/loginImg.png';\nimport { loginPet } from 'constants/pets';\n\nconst Login = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <PetBlock img={loginImg} pet={loginPet} />\n        <LoginForm />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","theme","TitleWrapper","_templateObject2","Text","_templateObject3","FormWrapper","_templateObject4","InputWrapper","_templateObject5","props","hasError","hasSuccess","ErrorText","_templateObject6","SuccessMessage","_templateObject7","ErrorIcon","_templateObject8","errorIconRight","EyeIconInvisible","AiOutlineEyeInvisible","_templateObject9","EyeIconVisible","AiOutlineEye","_templateObject10","ButtonWrapper","_templateObject11","SuccessIcon","_templateObject12","Link","NavLink","_templateObject13","LinkWrapper","_templateObject14","LoginFormSchema","yup","shape","email","matches","message","required","password","min","initialValues","LoginForm","_useState","useState","_useState2","_slicedToArray","isPasswordVisible","setIsPasswordVisible","dispatch","useDispatch","handleTogglePassword","prevState","_jsxs","children","_jsx","Title","name","Formik","onSubmit","_ref","_ref2","resetForm","logIn","validationSchema","_ref3","handleSubmit","errors","touched","Field","type","placeholder","ErrorMessage","component","onClick","href","sprite","Button","width","text","handleClick","to","Container","PetBlock","img","loginImg","pet","loginPet"],"sourceRoot":""}