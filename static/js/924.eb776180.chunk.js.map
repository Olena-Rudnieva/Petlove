{"version":3,"file":"static/js/924.eb776180.chunk.js","mappings":"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","sources":["components/Title/Title.styled.js","components/Title/Title.jsx","utils/workingDays.js","components/FriendsItem/FriendsItem.styled.js","components/FriendsItem/FriendsItem.jsx","components/FriendsList/FriendsList.styled.js","components/FriendsList/FriendsList.jsx","redux/friends/friendsSelector.js","pages/Friends/Friends.styled.js","pages/Friends/Friends.jsx","pages/Notices/Notices.styled.jsx"],"sourcesContent":["import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const StyledTitle = styled.h1`\n  font-size: ${theme.fontSizes.xl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1;\n  letter-spacing: -0.84px;\n  color: ${theme.colors.black};\n  text-align: start;\n\n  ${theme.mq.tablet} {\n    font-size: ${theme.fontSizes.xxxxl};\n    letter-spacing: -1.62px;\n  }\n`;\n","import { StyledTitle } from './Title.styled';\n\nexport const Title = ({ name }) => {\n  return <StyledTitle>{name}</StyledTitle>;\n};\n","export const workingDays = workDays => {\n  if (\n    workDays &&\n    workDays.length > 0 &&\n    'from' in workDays[0] &&\n    'to' in workDays[0]\n  ) {\n    return workDays.map(day => {\n      const { from, to } = day;\n      return `${from} - ${to}`;\n    });\n  } else {\n    return ['Day and night'];\n  }\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const FriendsItemWrapper = styled.li`\n  position: relative;\n  display: flex;\n  gap: 20px;\n  width: 371px;\n  height: 196px;\n  padding: 40px 40px 40px 20px;\n  background-color: ${theme.colors.white};\n  border-radius: 15px;\n  box-shadow: ${theme.boxShadow.friends};\n`;\n\nexport const WorkingDaysWrapper = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  padding: 8px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.28571;\n  letter-spacing: -0.28px;\n  color: ${theme.colors.accent};\n  border-radius: 30px;\n  background-color: ${theme.colors.beige};\n`;\n\nexport const Image = styled.img`\n  width: 90px;\n  height: 90px;\n`;\n\nexport const InfoWrapper = styled.div``;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.3;\n  letter-spacing: -0.8px;\n  color: ${theme.colors.black};\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  gap: 2px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.28571;\n  letter-spacing: -0.28px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 8px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Link = styled.a`\n  margin-bottom: 8px;\n  color: ${theme.colors.black};\n`;\n\nexport const Description = styled.p`\n  max-width: 160px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const NoText = styled.p`\n  margin-bottom: 8px;\n  color: ${theme.colors.black};\n`;\n","import { workingDays } from 'utils/workingDays';\nimport {\n  Description,\n  FriendsItemWrapper,\n  Image,\n  InfoWrapper,\n  Link,\n  NoText,\n  Text,\n  TextWrapper,\n  Title,\n  WorkingDaysWrapper,\n} from './FriendsItem.styled';\n\nexport const FriendsItem = ({ item }) => {\n  const { title, imageUrl, email, address, addressUrl, phone, workDays } = item;\n\n  return (\n    <FriendsItemWrapper>\n      <WorkingDaysWrapper>\n        <p>{workingDays(workDays)[0]}</p>\n      </WorkingDaysWrapper>\n      <Image src={imageUrl} alt={title} />\n      <InfoWrapper>\n        <Title>{title}</Title>\n        <TextWrapper>\n          <Text>Email:</Text>\n          {email ? (\n            <Link href={`mailto:${email}`}>{email}</Link>\n          ) : (\n            <NoText>unknown</NoText>\n          )}\n        </TextWrapper>\n        <TextWrapper>\n          <Text>Address:</Text>\n          {address ? (\n            <Link href={addressUrl} target=\"_blank\">\n              <Description> {address}</Description>\n            </Link>\n          ) : (\n            <NoText>unknown</NoText>\n          )}\n        </TextWrapper>\n        <TextWrapper>\n          <Text>Phone:</Text>\n          {phone ? (\n            <Link href={`tel:${phone}`}>{phone}</Link>\n          ) : (\n            <NoText>unknown</NoText>\n          )}\n        </TextWrapper>\n      </InfoWrapper>\n    </FriendsItemWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 28px 20px;\n`;\n","import { FriendsItem } from 'components/FriendsItem/FriendsItem';\nimport { List } from './FriendsList.styled';\n\nexport const FriendsList = ({ friends }) => {\n  return (\n    <List>\n      {friends?.map(item => (\n        <FriendsItem key={item._id} item={item} />\n      ))}\n    </List>\n  );\n};\n","export const selectFriends = state => state.friends.newsData;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 0 auto;\n  padding-top: 64px;\n  padding-bottom: 80px;\n  padding-left: 30px;\n  padding-right: 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 60px;\n`;\n","import { Container } from 'components/Container/Container';\nimport { FriendsList } from 'components/FriendsList/FriendsList';\nimport { Title } from 'components/Title/Title';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFriends } from '../../redux/friends/friendsOperations';\nimport { selectFriends } from '../../redux/friends/friendsSelector';\nimport { TitleWrapper } from 'pages/Notices/Notices.styled';\nimport { Section } from './Friends.styled';\n\nconst Friends = () => {\n  const dispatch = useDispatch();\n  const friends = useSelector(selectFriends);\n\n  useEffect(() => {\n    dispatch(fetchFriends());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <Container>\n        <TitleWrapper>\n          <Title name={'Our friends'} />\n        </TitleWrapper>\n        <FriendsList friends={friends} />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Friends;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 0 auto;\n  padding-top: 64px;\n  padding-bottom: 80px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n"],"names":["StyledTitle","styled","_templateObject","_taggedTemplateLiteral","theme","Title","_ref","name","_jsx","children","workingDays","workDays","length","map","day","from","to","concat","FriendsItemWrapper","WorkingDaysWrapper","_templateObject2","Image","_templateObject3","InfoWrapper","_templateObject4","_templateObject5","TextWrapper","_templateObject6","Text","_templateObject7","Link","_templateObject8","Description","_templateObject9","NoText","_templateObject10","FriendsItem","item","title","imageUrl","email","address","addressUrl","phone","_jsxs","src","alt","href","target","List","FriendsList","friends","_id","selectFriends","state","newsData","Section","dispatch","useDispatch","useSelector","useEffect","fetchFriends","Container","TitleWrapper"],"sourceRoot":""}