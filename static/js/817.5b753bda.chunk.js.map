{"version":3,"file":"static/js/817.5b753bda.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/PetInfo/PetInfo.styled.js","components/PetInfo/PetInfo.jsx","components/PetBlock/PetBlock.styled.js","components/PetBlock/PetBlock.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationFormShema.js","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const ButtonStyle = styled.button`\n  font-weight: ${theme.fontWeight.medium};\n  font-size: ${theme.fontSizes.xs};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  background-color: ${theme.colors.accent};\n  /* padding: ${({ padding }) => padding}; */\n  padding: 14px 89px;\n  width: ${({ width }) => width};\n  color: ${theme.colors.white};\n  border-radius: 30px;\n  border: none;\n  transition: color ${theme.transition}, background-color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.accent};\n    background-color: ${theme.colors.beige};\n  }\n`;\n","import { ButtonStyle } from './Button.styled';\n\nexport const Button = ({ type, width, text, handleClick }) => {\n  return (\n    <ButtonStyle\n      type={type}\n      /*padding={padding}*/ width={width}\n      onClick={handleClick}\n    >\n      {text}\n    </ButtonStyle>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  left: 61px;\n  bottom: 97px;\n  width: 294px;\n  height: 121px;\n  padding: 16px;\n  display: flex;\n\n  gap: 8px;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  z-index: 10;\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60px;\n  height: 60px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const Image = styled.img``;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Title = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  color: ${theme.colors.accent};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.black};\n`;\n\nexport const InfoText = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.darkGrey};\n`;\n","import {\n  Accent,\n  Avatar,\n  Image,\n  InfoText,\n  InfoWrapper,\n  Text,\n  TextWrapper,\n  Title,\n} from './PetInfo.styled';\nimport registrationAvatar from '../../images/registrationAvatar.png';\n\nexport const PetInfo = () => {\n  return (\n    <InfoWrapper>\n      <Avatar>\n        <Image src={registrationAvatar} alt=\"Avatar\" />\n      </Avatar>\n      <div>\n        <TextWrapper>\n          <Title>Jack</Title>\n          <Text>\n            Birthday: <Accent>18.10.2021</Accent>\n          </Text>\n        </TextWrapper>\n        <InfoText>\n          Jack is a gray Persian cat with green eyes. He loves to be pampered\n          and groomed, and enjoys playing with toys.\n        </InfoText>\n      </div>\n    </InfoWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport rectangle from '../../images/rectangle.png';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  background-color: ${theme.colors.accent};\n  background-image: url(${rectangle});\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 30px;\n`;\n","import { PetInfo } from 'components/PetInfo/PetInfo';\nimport { Image, Wrapper } from './PetBlock.styled';\nimport registrationImg from '../../images/registrationImg.png';\n\nexport const PetBlock = () => {\n  return (\n    <Wrapper>\n      <Image src={registrationImg} alt=\"Pet\" />\n      <PetInfo />\n    </Wrapper>\n  );\n};\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const StyledTitle = styled.h1`\n  font-size: ${theme.fontSizes.xl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1;\n  letter-spacing: -0.84px;\n  color: ${theme.colors.black};\n  text-align: start;\n\n  ${theme.mq.tablet} {\n    font-size: ${theme.fontSizes.xxxxl};\n    letter-spacing: -1.62px;\n  }\n`;\n","import { StyledTitle } from './Title.styled';\n\nexport const Title = ({ name }) => {\n  return <StyledTitle>{name}</StyledTitle>;\n};\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 77px 84px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.222;\n  letter-spacing: -0.16px;\n  color: ${theme.colors.black};\n  margin-bottom: 32px;\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    border: 1px solid\n      ${props =>\n        props.hasError\n          ? theme.colors.red\n          : props.hasSuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color 0.3s;\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const ErrorIcon = styled.span`\n  position: absolute;\n  top: 15px;\n  right: ${props => (props.errorIconRight ? '50px' : '16px')};\n  font-size: 22px;\n  font-size: ${theme.fontWeight.bold};\n  color: ${theme.colors.red};\n  display: ${props => (props.hasError ? 'block' : 'none')};\n`;\n\nexport const EyeIconInvisible = styled(AiOutlineEyeInvisible)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const EyeIconVisible = styled(AiOutlineEye)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: inline-block;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nexport const SuccessIcon = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 50px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${theme.colors.accent};\n  transition: color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.beige};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.428;\n  letter-spacing: -0.42px;\n  color: ${theme.colors.mediumGrey};\n`;\n","import * as yup from 'yup';\n\nconst regEx = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nexport const RegistrationFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Username must be at least 3 characters long')\n    .required('Full name is required'),\n  email: yup\n    .string()\n    .matches(regEx, { message: 'Please enter a valid email' })\n    .required('Email is required'),\n  password: yup.string().min(7).required('Required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import { Title } from 'components/Title/Title';\nimport {\n  ButtonWrapper,\n  ErrorIcon,\n  ErrorText,\n  EyeIconInvisible,\n  EyeIconVisible,\n  FormWrapper,\n  InputWrapper,\n  Link,\n  LinkWrapper,\n  SuccessIcon,\n  SuccessMessage,\n  Text,\n  TitleWrapper,\n  Wrapper,\n} from './RegistrationForm.styled';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport sprite from '../../images/sprite.svg';\n\nimport { useState } from 'react';\nimport { Button } from 'components/Button/Button';\nimport { RegistrationFormSchema } from './RegistrationFormShema';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegistrationForm = () => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] =\n    useState(false);\n\n  const handleTogglePassword = () => {\n    setIsPasswordVisible(prevState => !prevState);\n  };\n\n  const handleToggleConfirmPassword = () => {\n    setIsConfirmPasswordVisible(prevState => !prevState);\n  };\n\n  const handleSubmit = ({ email, password }, actions) => {};\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title name={'Registration'} />\n      </TitleWrapper>\n      <Text>Thank you for your interest in our platform. </Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={RegistrationFormSchema}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <form>\n            <FormWrapper>\n              <InputWrapper hasError={touched.name && errors.name}>\n                <label>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Name\" />\n                  <ErrorIcon hasError={touched.name && errors.name}>\n                    ✕\n                  </ErrorIcon>\n\n                  <ErrorMessage name=\"name\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper hasError={touched.email && errors.email}>\n                <label>\n                  <Field type=\"email\" name=\"email\" placeholder=\" Email\" />\n                  <ErrorIcon hasError={touched.email && errors.email}>\n                    ✕\n                  </ErrorIcon>\n                  <ErrorMessage name=\"email\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper\n                hasError={touched.password && errors.password}\n                hasSuccess={touched.password && !errors.password}\n              >\n                <label>\n                  <Field\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\" Password\"\n                  />\n                  {isPasswordVisible ? (\n                    <EyeIconVisible onClick={handleTogglePassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleTogglePassword} />\n                  )}\n                  <ErrorIcon\n                    hasError={touched.password && errors.password}\n                    errorIconRight={true}\n                  >\n                    ✕\n                  </ErrorIcon>\n                  {touched.password && !errors.password && (\n                    <SuccessMessage>Password is secure</SuccessMessage>\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessIcon>\n                      <use href={sprite + '#icon-check'}></use>\n                    </SuccessIcon>\n                  )}\n                  <ErrorMessage name=\"password\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper\n                hasError={touched.confirmPassword && errors.confirmPassword}\n              >\n                <label>\n                  <Field\n                    type={isConfirmPasswordVisible ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                  />\n                  {isConfirmPasswordVisible ? (\n                    <EyeIconVisible onClick={handleToggleConfirmPassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleToggleConfirmPassword} />\n                  )}\n                  <ErrorIcon\n                    hasError={touched.confirmPassword && errors.confirmPassword}\n                    errorIconRight={true}\n                  >\n                    ✕\n                  </ErrorIcon>\n                  <ErrorMessage name=\"confirmPassword\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button\n                // padding={'16px 186px'}\n                width={'424px'}\n                text={'REGISTRATION'}\n                type={'submit'}\n                handleClick={handleSubmit}\n              />\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n      <LinkWrapper>\n        <p>Already have an account?</p>\n        <Link to=\"/login\">Login</Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n","import { Container } from 'components/Container/Container';\nimport { PetBlock } from 'components/PetBlock/PetBlock';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport { Wrapper } from './Registration.styled';\n\nconst Registration = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <PetBlock />\n        <RegistrationForm />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Registration;\n"],"names":["ButtonStyle","styled","_templateObject","_taggedTemplateLiteral","theme","_ref","padding","_ref2","width","Button","type","text","handleClick","_jsx","onClick","children","InfoWrapper","Avatar","_templateObject2","Image","_templateObject3","TextWrapper","_templateObject4","Title","_templateObject5","Text","_templateObject6","Accent","_templateObject7","InfoText","_templateObject8","PetInfo","_jsxs","src","alt","Wrapper","PetBlock","registrationImg","StyledTitle","name","TitleWrapper","FormWrapper","InputWrapper","props","hasError","hasSuccess","ErrorText","SuccessMessage","ErrorIcon","errorIconRight","EyeIconInvisible","AiOutlineEyeInvisible","_templateObject9","EyeIconVisible","AiOutlineEye","_templateObject10","ButtonWrapper","_templateObject11","SuccessIcon","_templateObject12","Link","NavLink","_templateObject13","LinkWrapper","_templateObject14","RegistrationFormSchema","yup","shape","min","required","email","matches","message","password","confirmPassword","oneOf","initialValues","RegistrationForm","_useState","useState","_useState2","_slicedToArray","isPasswordVisible","setIsPasswordVisible","_useState3","_useState4","isConfirmPasswordVisible","setIsConfirmPasswordVisible","handleTogglePassword","prevState","handleToggleConfirmPassword","Formik","onSubmit","actions","validationSchema","handleSubmit","errors","touched","Field","placeholder","ErrorMessage","component","href","sprite","to","Container"],"sourceRoot":""}