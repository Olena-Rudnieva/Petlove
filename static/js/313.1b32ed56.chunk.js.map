{"version":3,"file":"static/js/313.1b32ed56.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationFormShema.js","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx"],"sourcesContent":["import { theme } from 'constants/theme';\nimport styled from 'styled-components';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 77px 84px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.222;\n  letter-spacing: -0.16px;\n  color: ${theme.colors.black};\n  margin-bottom: 32px;\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    border: 1px solid\n      ${props =>\n        props.haserror\n          ? theme.colors.red\n          : props.hassuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color 0.3s;\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const ErrorIcon = styled.span`\n  position: absolute;\n  top: 15px;\n  right: ${props => (props.erroriconright ? '50px' : '16px')};\n  font-size: 22px;\n  font-size: ${theme.fontWeight.bold};\n  color: ${theme.colors.red};\n  display: ${props => (props.haserror ? 'block' : 'none')};\n`;\n\nexport const EyeIconInvisible = styled(AiOutlineEyeInvisible)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const EyeIconVisible = styled(AiOutlineEye)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: inline-block;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nexport const SuccessIcon = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 50px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${theme.colors.accent};\n  transition: color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.beige};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.428;\n  letter-spacing: -0.42px;\n  color: ${theme.colors.mediumGrey};\n`;\n","import * as yup from 'yup';\n\nconst regEx = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nexport const RegistrationFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Username must be at least 3 characters long')\n    .required('Full name is required'),\n  email: yup\n    .string()\n    .matches(regEx, { message: 'Please enter a valid email' })\n    .required('Email is required'),\n  password: yup.string().min(7).required('Required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import { Title } from 'components/Title/Title';\nimport {\n  ButtonWrapper,\n  ErrorIcon,\n  ErrorText,\n  EyeIconInvisible,\n  EyeIconVisible,\n  FormWrapper,\n  InputWrapper,\n  Link,\n  LinkWrapper,\n  SuccessIcon,\n  SuccessMessage,\n  Text,\n  TitleWrapper,\n  Wrapper,\n} from './RegistrationForm.styled';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport sprite from '../../images/sprite.svg';\n\nimport { useState } from 'react';\nimport { Button } from 'components/Button/Button';\nimport { RegistrationFormSchema } from './RegistrationFormShema';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authOperation';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegistrationForm = () => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] =\n    useState(false);\n  const dispatch = useDispatch();\n\n  const handleTogglePassword = () => {\n    setIsPasswordVisible(prevState => !prevState);\n  };\n\n  const handleToggleConfirmPassword = () => {\n    setIsConfirmPasswordVisible(prevState => !prevState);\n  };\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    console.log('test');\n    console.log({ name, email, password });\n    dispatch(register({ name, email, password }));\n    resetForm();\n\n    // const form = e.currentTarget;\n    // dispatch(\n    //   register({\n    //     name: form.elements.name.value,\n    //     email: form.elements.email.value,\n    //     password: form.elements.password.value,\n    //   })\n    // );\n    // form.reset();\n  };\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title name={'Registration'} />\n      </TitleWrapper>\n      <Text>Thank you for your interest in our platform. </Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={RegistrationFormSchema}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <form onSubmit={handleSubmit}>\n            <FormWrapper>\n              <InputWrapper haserror={touched.name && errors.name}>\n                <label>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Name\" />\n                  <ErrorIcon haserror={touched.name && errors.name}>\n                    ✕\n                  </ErrorIcon>\n\n                  <ErrorMessage name=\"name\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper haserror={touched.email && errors.email}>\n                <label>\n                  <Field type=\"email\" name=\"email\" placeholder=\" Email\" />\n                  <ErrorIcon haserror={touched.email && errors.email}>\n                    ✕\n                  </ErrorIcon>\n                  <ErrorMessage name=\"email\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper\n                haserror={touched.password && errors.password}\n                hassuccess={touched.password && !errors.password}\n              >\n                <label>\n                  <Field\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\" Password\"\n                  />\n                  {isPasswordVisible ? (\n                    <EyeIconVisible onClick={handleTogglePassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleTogglePassword} />\n                  )}\n                  <ErrorIcon\n                    haserror={touched.password && errors.password}\n                    erroriconright=\"true\"\n                  >\n                    ✕\n                  </ErrorIcon>\n                  {touched.password && !errors.password && (\n                    <SuccessMessage>Password is secure</SuccessMessage>\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessIcon>\n                      <use href={sprite + '#icon-check'}></use>\n                    </SuccessIcon>\n                  )}\n                  <ErrorMessage name=\"password\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper\n                haserror={touched.confirmPassword && errors.confirmPassword}\n              >\n                <label>\n                  <Field\n                    type={isConfirmPasswordVisible ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                  />\n                  {isConfirmPasswordVisible ? (\n                    <EyeIconVisible onClick={handleToggleConfirmPassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleToggleConfirmPassword} />\n                  )}\n                  <ErrorIcon\n                    haserror={touched.confirmPassword && errors.confirmPassword}\n                    erroriconright=\"true\"\n                  >\n                    ✕\n                  </ErrorIcon>\n                  <ErrorMessage name=\"confirmPassword\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button\n                // padding={'16px 186px'}\n                width={'424px'}\n                text={'REGISTRATION'}\n                type={'submit'}\n                // handleClick={handleSubmit}\n              />\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n      <LinkWrapper>\n        <p>Already have an account?</p>\n        <Link to=\"/login\">Login</Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n","import { Container } from 'components/Container/Container';\nimport { PetBlock } from 'components/PetBlock/PetBlock';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport { Wrapper } from './Registration.styled';\nimport registrationImg from '../../images/registrationImg.png';\nimport { registrationPet } from 'constants/pets';\n\nconst Registration = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <PetBlock img={registrationImg} pet={registrationPet} />\n        <RegistrationForm />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Registration;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","theme","TitleWrapper","_templateObject2","Text","_templateObject3","FormWrapper","_templateObject4","InputWrapper","_templateObject5","props","haserror","hassuccess","ErrorText","_templateObject6","SuccessMessage","_templateObject7","ErrorIcon","_templateObject8","erroriconright","EyeIconInvisible","AiOutlineEyeInvisible","_templateObject9","EyeIconVisible","AiOutlineEye","_templateObject10","ButtonWrapper","_templateObject11","SuccessIcon","_templateObject12","Link","NavLink","_templateObject13","LinkWrapper","_templateObject14","RegistrationFormSchema","yup","shape","name","min","required","email","matches","message","password","confirmPassword","oneOf","initialValues","RegistrationForm","_useState","useState","_useState2","_slicedToArray","isPasswordVisible","setIsPasswordVisible","_useState3","_useState4","isConfirmPasswordVisible","setIsConfirmPasswordVisible","dispatch","useDispatch","handleTogglePassword","prevState","handleToggleConfirmPassword","_jsxs","children","_jsx","Title","Formik","onSubmit","_ref","_ref2","resetForm","console","log","register","validationSchema","_ref3","handleSubmit","errors","touched","Field","type","placeholder","ErrorMessage","component","onClick","href","sprite","Button","width","text","to","Container","PetBlock","img","registrationImg","pet","registrationPet"],"sourceRoot":""}