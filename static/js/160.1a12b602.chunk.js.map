{"version":3,"file":"static/js/160.1a12b602.chunk.js","mappings":"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","sources":["components/PetInfo/PetInfo.styled.js","components/PetInfo/PetInfo.jsx","components/PetBlock/PetBlock.styled.js","components/PetBlock/PetBlock.jsx","pages/AddPet/AddPet.styled.js","components/AddPetForm/AddPetForm.styled.js","components/AddPetForm/GenderSelection/GenderSelection.styled.js","components/AddPetForm/GenderSelection/GenderSelection.jsx","components/AddPetForm/AddPetForm.jsx","pages/AddPet/AddPet.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  left: 61px;\n  bottom: 97px;\n  width: 294px;\n  height: 121px;\n  padding: 16px;\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  z-index: 10;\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const Image = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Title = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  color: ${theme.colors.accent};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.black};\n`;\n\nexport const InfoText = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.darkGrey};\n`;\n","import {\n  Accent,\n  Avatar,\n  Image,\n  InfoText,\n  InfoWrapper,\n  Text,\n  TextWrapper,\n  Title,\n} from './PetInfo.styled';\n\nexport const PetInfo = ({ pet }) => {\n  const { avatar, name, birthday, description } = pet;\n  return (\n    <InfoWrapper>\n      <Avatar>\n        <Image src={avatar} alt=\"Avatar\" />\n      </Avatar>\n      <div>\n        <TextWrapper>\n          <Title>{name}</Title>\n          <Text>\n            Birthday: <Accent>{birthday}</Accent>\n          </Text>\n        </TextWrapper>\n        <InfoText>{description}</InfoText>\n      </div>\n    </InfoWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport rectangle from '../../images/rectangle.png';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  background-color: ${theme.colors.accent};\n  background-image: url(${rectangle});\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 30px;\n`;\n","import { PetInfo } from 'components/PetInfo/PetInfo';\nimport { Image, Wrapper } from './PetBlock.styled';\n\nexport const PetBlock = ({ img, pet = null }) => {\n  return (\n    <Wrapper>\n      <Image src={img} alt=\"Pet\" />\n      {pet && <PetInfo pet={pet} />}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-bottom: 32px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 60px 80px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\n  font-size: ${theme.fontSizes.xxl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1;\n  letter-spacing: -0.96px;\n  color: ${theme.colors.black};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  color: ${theme.colors.semiGrey};\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 86px;\n  height: 86px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  overflow: hidden;\n  margin-bottom: 12px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const PetIcon = styled.svg`\n  width: 44px;\n  height: 44px;\n  fill: ${theme.colors.accent};\n`;\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const SelectionWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const StyledRadioWrapper = styled.div`\n  span {\n    width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n  }\n\n  input[type='radio'] {\n    /* position: absolute;\n    opacity: 0; */\n    display: none;\n  }\n\n  input[type='radio'] + span {\n    position: relative;\n    background-color: ${props => props.backgroundcolor || 'transparent'};\n  }\n\n  input[type='radio']:checked + span::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 38px;\n    height: 38px;\n    border: 2px solid grey;\n    border-color: ${props => props.bordercolor};\n    background-color: transparent;\n    border-radius: 50%;\n    /* border-color: ${props => props.checkedbordercolor || 'transparent'}; */\n  }\n`;\n\nexport const FemaleIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: ${theme.colors.white};\n  fill: transparent;\n`;\n\nexport const MaleIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: ${theme.colors.blue};\n  fill: transparent;\n`;\n\nexport const MultipleIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: ${theme.colors.accent};\n  fill: transparent;\n`;\n","import {\n  FemaleIcon,\n  MaleIcon,\n  MultipleIcon,\n  SelectionWrapper,\n  StyledRadioWrapper,\n} from './GenderSelection.styled';\nimport { Field } from 'formik';\nimport sprite from '../../../images/sprite.svg';\n\nexport const GenderSelection = () => {\n  return (\n    <SelectionWrapper>\n      <StyledRadioWrapper backgroundcolor=\"#eb1035\" bordercolor=\"#892d3e\">\n        <label>\n          <Field type=\"radio\" name=\"sex\" value=\"female\" />\n          <span>\n            <FemaleIcon>\n              <use href={sprite + '#icon-female'}></use>\n            </FemaleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n\n      <StyledRadioWrapper\n        backgroundcolor=\"rgba(84, 173, 255, 0.1)\"\n        bordercolor=\"rgba(49, 87, 125, 0.3)\"\n      >\n        <label>\n          <Field type=\"radio\" name=\"sex\" value=\"male\" />\n          <span>\n            <MaleIcon>\n              <use href={sprite + '#icon-male'}></use>\n            </MaleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n      <StyledRadioWrapper backgroundcolor=\"#FFF4DF\" bordercolor=\"#e1c184\">\n        <label>\n          <Field type=\"radio\" name=\"sex\" value=\"mixed\" />\n          <span>\n            <MultipleIcon>\n              <use href={sprite + '#icon-multiple'}></use>\n            </MultipleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n    </SelectionWrapper>\n  );\n};\n","// import sprite from '../../images/sprite.svg';\n// import { useDispatch, useSelector } from 'react-redux';\nimport {\n  // Image,\n  // ImageWrapper,\n  // PetIcon,\n  Text,\n  Title,\n  TitleWrapper,\n  Wrapper,\n} from './AddPetForm.styled';\nimport { GenderSelection } from './GenderSelection/GenderSelection';\nimport { Formik, Form } from 'formik';\n// import { Avatar } from 'components/Avatar/Avatar';\n\nconst initialValues = {\n  sex: '',\n};\n\nexport const AddPetForm = () => {\n  const handleSubmit = values => {\n    console.log(values);\n  };\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title>Add my pet /</Title>\n        <Text>Personal details</Text>\n      </TitleWrapper>\n\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <GenderSelection />\n\n          {/* <ImageWrapper>\n            {pet.imgURL ? (\n              <Image src={pet.imgURL} alt=\"Pet\" />\n            ) : (\n              <PetIcon>\n                <use href={sprite + '#icon-pet'}></use>\n              </PetIcon>\n            )}\n          </ImageWrapper> */}\n          {/* <button type=\"submit\">Submit</button> */}\n        </Form>\n      </Formik>\n    </Wrapper>\n  );\n};\n","import { Container } from 'components/Container/Container';\nimport { Section, Wrapper } from './AddPet.styled';\nimport { PetBlock } from 'components/PetBlock/PetBlock';\nimport addPetImg from '../../images/addPetImg.png';\nimport { AddPetForm } from 'components/AddPetForm/AddPetForm';\n\nconst AddPet = () => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <PetBlock img={addPetImg} />\n          <AddPetForm />\n        </Wrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default AddPet;\n"],"names":["InfoWrapper","styled","_templateObject","_taggedTemplateLiteral","theme","Avatar","_templateObject2","Image","_templateObject3","TextWrapper","_templateObject4","Title","_templateObject5","Text","_templateObject6","Accent","_templateObject7","InfoText","_templateObject8","PetInfo","_ref","pet","avatar","name","birthday","description","_jsxs","children","_jsx","src","alt","Wrapper","PetBlock","img","_ref$pet","Section","TitleWrapper","SelectionWrapper","StyledRadioWrapper","props","backgroundcolor","bordercolor","checkedbordercolor","FemaleIcon","MaleIcon","MultipleIcon","GenderSelection","Field","type","value","href","sprite","initialValues","sex","AddPetForm","Formik","onSubmit","values","console","log","Form","Container","addPetImg"],"sourceRoot":""}