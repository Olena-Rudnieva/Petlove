{"version":3,"file":"static/js/313.af94c441.chunk.js","mappings":"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","sources":["components/PetInfo/PetInfo.styled.js","components/PetInfo/PetInfo.jsx","components/PetBlock/PetBlock.styled.js","components/PetBlock/PetBlock.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","constants/pets.js","components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationFormShema.js","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  left: 61px;\n  bottom: 97px;\n  width: 294px;\n  height: 121px;\n  padding: 16px;\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  z-index: 10;\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const Image = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Title = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  color: ${theme.colors.accent};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.black};\n`;\n\nexport const InfoText = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.darkGrey};\n`;\n","import {\n  Accent,\n  Avatar,\n  Image,\n  InfoText,\n  InfoWrapper,\n  Text,\n  TextWrapper,\n  Title,\n} from './PetInfo.styled';\n\nexport const PetInfo = ({ pet }) => {\n  const { avatar, name, birthday, description } = pet;\n  return (\n    <InfoWrapper>\n      <Avatar>\n        <Image src={avatar} alt=\"Avatar\" />\n      </Avatar>\n      <div>\n        <TextWrapper>\n          <Title>{name}</Title>\n          <Text>\n            Birthday: <Accent>{birthday}</Accent>\n          </Text>\n        </TextWrapper>\n        <InfoText>{description}</InfoText>\n      </div>\n    </InfoWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport rectangle from '../../images/rectangle.png';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  background-color: ${theme.colors.accent};\n  background-image: url(${rectangle});\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 30px;\n`;\n","import { PetInfo } from 'components/PetInfo/PetInfo';\nimport { Image, Wrapper } from './PetBlock.styled';\n\nexport const PetBlock = ({ img, pet = null }) => {\n  return (\n    <Wrapper>\n      <Image src={img} alt=\"Pet\" />\n      {pet && <PetInfo pet={pet} />}\n    </Wrapper>\n  );\n};\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const StyledTitle = styled.h1`\n  font-size: ${theme.fontSizes.xl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1;\n  letter-spacing: -0.84px;\n  color: ${theme.colors.black};\n  text-align: start;\n\n  ${theme.mq.tablet} {\n    font-size: ${theme.fontSizes.xxxxl};\n    letter-spacing: -1.62px;\n  }\n`;\n","import { StyledTitle } from './Title.styled';\n\nexport const Title = ({ name }) => {\n  return <StyledTitle>{name}</StyledTitle>;\n};\n","import registrationAvatar from '../images/registrationAvatar.png';\nimport loginAvatar from '../images/loginAvatar.png';\n\nexport const registrationPet = {\n  avatar: registrationAvatar,\n  name: 'Jack',\n  birthday: '18.10.2021',\n  description:\n    'Jack is a gray Persian cat with green eyes. He loves to be pampered and groomed, and enjoys playing with toys.',\n};\n\nexport const loginPet = {\n  avatar: loginAvatar,\n  name: 'Rich',\n  birthday: '21.09.2020',\n  description:\n    'Rich would be the perfect addition to an active family that loves to play and go on walks. I bet he would love having a doggy playmate too!',\n};\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 77px 84px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.222;\n  letter-spacing: -0.16px;\n  color: ${theme.colors.black};\n  margin-bottom: 32px;\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    border: 1px solid\n      ${props =>\n        props.haserror\n          ? theme.colors.red\n          : props.hassuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const ErrorIcon = styled.span`\n  position: absolute;\n  top: 15px;\n  right: ${props => (props.erroriconright ? '50px' : '16px')};\n  font-size: 22px;\n  font-size: ${theme.fontWeight.bold};\n  color: ${theme.colors.red};\n  display: ${props => (props.haserror ? 'block' : 'none')};\n`;\n\nexport const EyeIconInvisible = styled(AiOutlineEyeInvisible)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const EyeIconVisible = styled(AiOutlineEye)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: inline-block;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nexport const SuccessIcon = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 50px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${theme.colors.accent};\n  transition: color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.beige};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.428;\n  letter-spacing: -0.42px;\n  color: ${theme.colors.mediumGrey};\n`;\n","import * as yup from 'yup';\n\nconst regEx = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nexport const RegistrationFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Username must be at least 3 characters long')\n    .required('Full name is required'),\n  email: yup\n    .string()\n    .matches(regEx, { message: 'Please enter a valid email' })\n    .required('Email is required'),\n  password: yup.string().min(7).required('Required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import { Title } from 'components/Title/Title';\nimport {\n  ButtonWrapper,\n  ErrorIcon,\n  ErrorText,\n  EyeIconInvisible,\n  EyeIconVisible,\n  FormWrapper,\n  InputWrapper,\n  Link,\n  LinkWrapper,\n  SuccessIcon,\n  SuccessMessage,\n  Text,\n  TitleWrapper,\n  Wrapper,\n} from './RegistrationForm.styled';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport sprite from '../../images/sprite.svg';\n\nimport { useEffect, useState } from 'react';\nimport { Button } from 'components/Button/Button';\nimport { RegistrationFormSchema } from './RegistrationFormShema';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../redux/auth/authOperation';\nimport { useNavigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../../redux/auth/authSelectors';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegistrationForm = () => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] =\n    useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleTogglePassword = () => {\n    setIsPasswordVisible(prevState => !prevState);\n  };\n\n  const handleToggleConfirmPassword = () => {\n    setIsConfirmPasswordVisible(prevState => !prevState);\n  };\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(register({ name, email, password }));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/profile');\n    }\n  }, [navigate, isLoggedIn]);\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title name={'Registration'} />\n      </TitleWrapper>\n      <Text>Thank you for your interest in our platform. </Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={RegistrationFormSchema}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <form onSubmit={handleSubmit}>\n            <FormWrapper>\n              <InputWrapper haserror={touched.name && errors.name}>\n                <label>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Name\" />\n                  <ErrorIcon haserror={touched.name && errors.name}>\n                    ✕\n                  </ErrorIcon>\n\n                  <ErrorMessage name=\"name\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper haserror={touched.email && errors.email}>\n                <label>\n                  <Field type=\"email\" name=\"email\" placeholder=\" Email\" />\n                  <ErrorIcon haserror={touched.email && errors.email}>\n                    ✕\n                  </ErrorIcon>\n                  <ErrorMessage name=\"email\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper\n                haserror={touched.password && errors.password}\n                hassuccess={touched.password && !errors.password}\n              >\n                <label>\n                  <Field\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\" Password\"\n                  />\n                  {isPasswordVisible ? (\n                    <EyeIconVisible onClick={handleTogglePassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleTogglePassword} />\n                  )}\n                  <ErrorIcon\n                    haserror={touched.password && errors.password}\n                    erroriconright=\"true\"\n                  >\n                    ✕\n                  </ErrorIcon>\n                  {touched.password && !errors.password && (\n                    <SuccessMessage>Password is secure</SuccessMessage>\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessIcon>\n                      <use href={sprite + '#icon-check'}></use>\n                    </SuccessIcon>\n                  )}\n                  <ErrorMessage name=\"password\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper\n                haserror={touched.confirmPassword && errors.confirmPassword}\n              >\n                <label>\n                  <Field\n                    type={isConfirmPasswordVisible ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                  />\n                  {isConfirmPasswordVisible ? (\n                    <EyeIconVisible onClick={handleToggleConfirmPassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleToggleConfirmPassword} />\n                  )}\n                  <ErrorIcon\n                    haserror={touched.confirmPassword && errors.confirmPassword}\n                    erroriconright=\"true\"\n                  >\n                    ✕\n                  </ErrorIcon>\n                  <ErrorMessage name=\"confirmPassword\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button\n                // padding={'16px 186px'}\n                width={'424px'}\n                height={'52px'}\n                text={'REGISTRATION'}\n                type={'submit'}\n                // handleClick={handleSubmit}\n              />\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n      <LinkWrapper>\n        <p>Already have an account?</p>\n        <Link to=\"/login\">Login</Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n","import { Container } from 'components/Container/Container';\nimport { PetBlock } from 'components/PetBlock/PetBlock';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport { Wrapper } from './Registration.styled';\nimport registrationImg from '../../images/registrationImg.png';\nimport { registrationPet } from 'constants/pets';\n\nconst Registration = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <PetBlock img={registrationImg} pet={registrationPet} />\n        <RegistrationForm />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Registration;\n"],"names":["InfoWrapper","styled","_templateObject","_taggedTemplateLiteral","theme","Avatar","_templateObject2","Image","_templateObject3","TextWrapper","_templateObject4","Title","_templateObject5","Text","_templateObject6","Accent","_templateObject7","InfoText","_templateObject8","PetInfo","_ref","pet","avatar","name","birthday","description","_jsxs","children","_jsx","src","alt","Wrapper","PetBlock","img","_ref$pet","StyledTitle","registrationPet","loginPet","TitleWrapper","FormWrapper","InputWrapper","props","haserror","hassuccess","ErrorText","SuccessMessage","ErrorIcon","erroriconright","EyeIconInvisible","AiOutlineEyeInvisible","_templateObject9","EyeIconVisible","AiOutlineEye","_templateObject10","ButtonWrapper","_templateObject11","SuccessIcon","_templateObject12","Link","NavLink","_templateObject13","LinkWrapper","_templateObject14","RegistrationFormSchema","yup","shape","min","required","email","matches","message","password","confirmPassword","oneOf","initialValues","RegistrationForm","_useState","useState","_useState2","_slicedToArray","isPasswordVisible","setIsPasswordVisible","_useState3","_useState4","isConfirmPasswordVisible","setIsConfirmPasswordVisible","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","handleTogglePassword","prevState","handleToggleConfirmPassword","useEffect","Formik","onSubmit","_ref2","resetForm","register","validationSchema","_ref3","handleSubmit","errors","touched","Field","type","placeholder","ErrorMessage","component","onClick","href","sprite","Button","width","height","text","to","Container","registrationImg"],"sourceRoot":""}